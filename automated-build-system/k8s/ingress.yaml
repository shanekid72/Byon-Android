apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lulupay-build-system-ingress
  namespace: lulupay-production
  labels:
    app: lulupay-build-system
    component: ingress
    environment: production
  annotations:
    # Ingress Controller
    kubernetes.io/ingress.class: "nginx"
    
    # SSL Configuration
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    nginx.ingress.kubernetes.io/ssl-ciphers: "ECDHE-RSA-AES128-GCM-SHA256,ECDHE-RSA-AES256-GCM-SHA384"
    
    # Rate Limiting
    nginx.ingress.kubernetes.io/rate-limit: "1000"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-connections: "50"
    
    # Request Size and Timeouts
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    
    # CORS Configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://app.lulupay.com,https://dashboard.lulupay.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET,POST,PUT,DELETE,OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    
    # Security Headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Content-Type-Options nosniff;
      add_header X-Frame-Options DENY;
      add_header X-XSS-Protection "1; mode=block";
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
      add_header Referrer-Policy "strict-origin-when-cross-origin";
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' wss: https:;";
    
    # Load Balancing
    nginx.ingress.kubernetes.io/upstream-hash-by: "$remote_addr"
    nginx.ingress.kubernetes.io/load-balance: "round_robin"
    
    # Monitoring
    nginx.ingress.kubernetes.io/enable-access-log: "true"
    nginx.ingress.kubernetes.io/access-log-path: "/var/log/nginx/lulupay-access.log"
    
    # Custom Error Pages
    nginx.ingress.kubernetes.io/custom-http-errors: "404,500,502,503,504"
    nginx.ingress.kubernetes.io/default-backend: "lulupay-error-page-service"

spec:
  tls:
    - hosts:
        - api.lulupay.com
        - build.lulupay.com
        - assets.lulupay.com
        - ws.lulupay.com
      secretName: lulupay-tls-secret
  
  rules:
    # Main API Domain
    - host: api.lulupay.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: lulupay-build-system-service
                port:
                  number: 80
          
          - path: /api/health
            pathType: Prefix
            backend:
              service:
                name: lulupay-health-service
                port:
                  number: 8888
          
          - path: /metrics
            pathType: Prefix
            backend:
              service:
                name: lulupay-monitoring-service
                port:
                  number: 9090
    
    # Build Management Domain
    - host: build.lulupay.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: lulupay-build-system-service
                port:
                  number: 80
          
          - path: /api/builds
            pathType: Prefix
            backend:
              service:
                name: lulupay-build-system-service
                port:
                  number: 80
          
          - path: /api/queue
            pathType: Prefix
            backend:
              service:
                name: lulupay-build-queue-service
                port:
                  number: 6379
    
    # Asset Management Domain
    - host: assets.lulupay.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: lulupay-asset-storage-service
                port:
                  number: 9000
          
          - path: /api/assets
            pathType: Prefix
            backend:
              service:
                name: lulupay-build-system-service
                port:
                  number: 80
    
    # WebSocket Domain
    - host: ws.lulupay.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: lulupay-websocket-service
                port:
                  number: 8080

---
# WebSocket Specific Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lulupay-websocket-ingress
  namespace: lulupay-production
  labels:
    app: lulupay-build-system
    component: websocket-ingress
    environment: production
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
    # WebSocket Specific Configuration
    nginx.ingress.kubernetes.io/websocket-services: "lulupay-websocket-service"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/upstream-hash-by: "$remote_addr"
    
    # WebSocket Headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_cache_bypass $http_upgrade;

spec:
  tls:
    - hosts:
        - ws.lulupay.com
      secretName: lulupay-websocket-tls-secret
  
  rules:
    - host: ws.lulupay.com
      http:
        paths:
          - path: /ws
            pathType: Prefix
            backend:
              service:
                name: lulupay-websocket-service
                port:
                  number: 8080

---
# Staging Environment Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lulupay-build-system-ingress-staging
  namespace: lulupay-staging
  labels:
    app: lulupay-build-system
    component: ingress
    environment: staging
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rate-limit: "500"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    
    # Basic Auth for Staging
    nginx.ingress.kubernetes.io/auth-type: "basic"
    nginx.ingress.kubernetes.io/auth-secret: "staging-basic-auth"
    nginx.ingress.kubernetes.io/auth-realm: "LuluPay Staging Environment"

spec:
  tls:
    - hosts:
        - staging-api.lulupay.com
        - staging-build.lulupay.com
      secretName: lulupay-staging-tls-secret
  
  rules:
    - host: staging-api.lulupay.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: lulupay-build-system-service-staging
                port:
                  number: 80
    
    - host: staging-build.lulupay.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: lulupay-build-system-service-staging
                port:
                  number: 80

---
# Network Policy for Ingress
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: lulupay-ingress-network-policy
  namespace: lulupay-production
  labels:
    app: lulupay-build-system
    component: network-policy
    environment: production
spec:
  podSelector:
    matchLabels:
      app: lulupay-build-system
      component: backend
      environment: production
  
  policyTypes:
    - Ingress
    - Egress
  
  ingress:
    # Allow traffic from ingress controller
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: ingress-nginx
      ports:
        - protocol: TCP
          port: 3000
        - protocol: TCP
          port: 9090
    
    # Allow internal traffic
    - from:
        - namespaceSelector:
            matchLabels:
              name: lulupay-production
      ports:
        - protocol: TCP
          port: 3000
        - protocol: TCP
          port: 9090
        - protocol: TCP
          port: 8080
  
  egress:
    # Allow outbound to database
    - to:
        - podSelector:
            matchLabels:
              app: postgresql
              component: database
      ports:
        - protocol: TCP
          port: 5432
    
    # Allow outbound to Redis
    - to:
        - podSelector:
            matchLabels:
              app: redis
              component: cache
      ports:
        - protocol: TCP
          port: 6379
    
    # Allow outbound DNS
    - to: []
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53
    
    # Allow outbound HTTPS
    - to: []
      ports:
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 80

---
# Certificate Issuer for Let's Encrypt
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  labels:
    app: lulupay-build-system
    component: cert-manager
    environment: production
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: devops@lulupay.com
    privateKeySecretRef:
      name: letsencrypt-prod-private-key
    solvers:
      - http01:
          ingress:
            class: nginx

---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
  labels:
    app: lulupay-build-system
    component: cert-manager
    environment: staging
spec:
  acme:
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    email: devops@lulupay.com
    privateKeySecretRef:
      name: letsencrypt-staging-private-key
    solvers:
      - http01:
          ingress:
            class: nginx 