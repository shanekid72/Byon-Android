// Top-level build file for {{APP_NAME}} by {{PARTNER_NAME}}
// Generated by LuluPay White-label App Builder

buildscript {
    ext {
        kotlin_version = '1.9.10'
        gradle_version = '8.1.2'
        compile_sdk_version = 34
        target_sdk_version = 34
        min_sdk_version = 24
        build_tools_version = '34.0.0'
    }
    
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
    
    dependencies {
        classpath "com.android.tools.build:gradle:$gradle_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.gms:google-services:4.4.0'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.9'
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        
        // LuluPay SDK Repository
        maven {
            url 'https://repo.lulupay.com/android'
            credentials {
                username = "{{PARTNER_ID}}"
                password = "{{API_KEY}}"
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

// Partner-specific configuration
ext {
    // Partner Information
    partnerInfo = [
        partnerId: "{{PARTNER_ID}}",
        partnerName: "{{PARTNER_NAME}}",
        appName: "{{APP_NAME}}",
        packageName: "{{PACKAGE_NAME}}",
        versionName: "{{VERSION_NAME}}",
        versionCode: {{VERSION_CODE}}
    ]
    
    // Feature Configuration
    features = [
        enableBiometric: {{ENABLE_BIOMETRIC}},
        enablePushNotifications: {{ENABLE_PUSH_NOTIFICATIONS}},
        enableEKYC: {{ENABLE_EKYC}},
        enableCardPayments: {{ENABLE_CARD_PAYMENTS}},
        enableBankTransfer: {{ENABLE_BANK_TRANSFER}},
        enableCrypto: {{ENABLE_CRYPTO}},
        enableMultiCurrency: {{ENABLE_MULTI_CURRENCY}},
        enableOfflineMode: {{ENABLE_OFFLINE_MODE}}
    ]
    
    // Branding Configuration
    branding = [
        primaryColor: "{{PRIMARY_COLOR}}",
        secondaryColor: "{{SECONDARY_COLOR}}",
        backgroundColor: "{{BACKGROUND_COLOR}}",
        textColor: "{{TEXT_COLOR}}",
        supportDarkMode: {{SUPPORT_DARK_MODE}}
    ]
    
    // API Configuration
    apiConfig = [
        baseUrl: "{{API_BASE_URL}}",
        apiKey: "{{API_KEY}}",
        environment: "{{ENVIRONMENT}}"
    ]
} 