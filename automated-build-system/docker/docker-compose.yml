version: '3.8'

# LuluPay Android Build Environment
# Docker Compose configuration for containerized builds

services:
  # Main Android Builder Service
  android-builder:
    build:
      context: ..
      dockerfile: docker/Dockerfile.android-builder
      args:
        - ANDROID_SDK_VERSION=34.0.0
        - GRADLE_VERSION=8.5
    image: lulupay/android-builder:latest
    container_name: lulupay-android-builder
    volumes:
      # Workspace for build projects
      - type: bind
        source: ../storage/builds
        target: /workspace
      # Gradle cache for faster builds
      - gradle-cache:/gradle-cache
      # Build cache for optimization
      - build-cache:/build-cache
      # Keystore storage for signing
      - keystore-storage:/keystore
      # Temporary storage
      - type: tmpfs
        target: /tmp
        tmpfs:
          size: 2G
    environment:
      # Build configuration
      - GRADLE_USER_HOME=/gradle-cache
      - ANDROID_SDK_ROOT=/opt/android-sdk
      - ANDROID_HOME=/opt/android-sdk
      - BUILD_CACHE_DIR=/build-cache
      - JAVA_OPTS=-Xmx4g -Xms1g
      # Performance tuning
      - GRADLE_OPTS=-Xmx4g -Xms1g -XX:MaxMetaspaceSize=1g -XX:+UseG1GC
      - GRADLE_PARALLEL=true
      - GRADLE_CACHING=true
      - GRADLE_WORKERS_MAX=4
    networks:
      - lulupay-build-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 8G
        reservations:
          cpus: '2.0'
          memory: 4G
    healthcheck:
      test: ["CMD", "gradle", "--version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Build Queue Manager Service
  build-queue-manager:
    build:
      context: ..
      dockerfile: docker/Dockerfile.queue-manager
    image: lulupay/build-queue-manager:latest
    container_name: lulupay-build-queue
    depends_on:
      - redis
      - mongodb
    volumes:
      - type: bind
        source: ../storage
        target: /app/storage
      - type: bind
        source: ../logs
        target: /app/logs
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
      - MONGODB_URL=mongodb://mongodb:27017/lulupay-builds
      - QUEUE_CONCURRENCY=2
      - MAX_BUILD_TIME=1800
      - STORAGE_PATH=/app/storage
    networks:
      - lulupay-build-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G

  # Redis for Queue Management
  redis:
    image: redis:7-alpine
    container_name: lulupay-redis
    volumes:
      - redis-data:/data
    environment:
      - REDIS_PASSWORD=lulupay-redis-secret
    command: redis-server --requirepass lulupay-redis-secret --maxmemory 512mb --maxmemory-policy allkeys-lru
    networks:
      - lulupay-build-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MongoDB for Build Metadata
  mongodb:
    image: mongo:6.0
    container_name: lulupay-mongodb
    volumes:
      - mongodb-data:/data/db
      - mongodb-config:/data/configdb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=lulupay
      - MONGO_INITDB_ROOT_PASSWORD=lulupay-mongo-secret
      - MONGO_INITDB_DATABASE=lulupay-builds
    networks:
      - lulupay-build-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # WebSocket Service for Real-time Updates
  websocket-service:
    build:
      context: ..
      dockerfile: docker/Dockerfile.websocket
    image: lulupay/websocket-service:latest
    container_name: lulupay-websocket
    depends_on:
      - redis
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
      - WS_PORT=3001
      - CORS_ORIGIN=*
    networks:
      - lulupay-build-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M

  # Nginx for Load Balancing and SSL
  nginx-proxy:
    image: nginx:alpine
    container_name: lulupay-nginx
    depends_on:
      - websocket-service
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ../storage/builds:/var/www/builds:ro
    networks:
      - lulupay-build-network
    restart: unless-stopped

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: lulupay-prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - lulupay-build-network
    restart: unless-stopped

  # Grafana for Monitoring Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: lulupay-grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=lulupay-admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - lulupay-build-network
    restart: unless-stopped

# Named volumes for persistent data
volumes:
  gradle-cache:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/../cache/gradle
  build-cache:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/../cache/build
  keystore-storage:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/../storage/keystores
  redis-data:
    driver: local
  mongodb-data:
    driver: local
  mongodb-config:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

# Networks
networks:
  lulupay-build-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 